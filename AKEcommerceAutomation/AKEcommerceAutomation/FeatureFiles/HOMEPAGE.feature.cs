// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.17929
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

#region Designer generated code

using TechTalk.SpecFlow;

#pragma warning disable

namespace AKEcommerceAutomation.FeatureFiles
{
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("HOMEPAGE")]
    public partial class HOMEPAGEFeature
    {
        private static TechTalk.SpecFlow.ITestRunner testRunner;

#line 1 "HOMEPAGE.feature"
#line hidden

        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            var featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"),
                "HOMEPAGE", "In order to avoid silly mistakes\r\nAs a math idiot\r\nI want to be told the sum of t" +
                            "wo numbers", ProgrammingLanguage.CSharp, ((string[]) (null)));
            testRunner.OnFeatureStart(featureInfo);
        }

        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }

        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }

        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }

        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }

        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }

        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify Sub Navigation Menu in Homepage")]
        public virtual void VerifySubNavigationMenuInHomepage()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Sub Navigation Menu in Homepage",
                ((string[]) (null)));
#line 17
            this.ScenarioSetup(scenarioInfo);
#line 18
            testRunner.When("I am in the AK Homepage", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "When ");
#line hidden
            var table1 = new TechTalk.SpecFlow.Table(new string[]
            {
                "Value"
            });
            table1.AddRow(new string[]
            {
                "DESTINATIONS"
            });
            table1.AddRow(new string[]
            {
                "JOURNEYS"
            });
            table1.AddRow(new string[]
            {
                "BEINSPIRED"
            });
            table1.AddRow(new string[]
            {
                "WHEN TO GO"
            });
            table1.AddRow(new string[]
            {
                "SEARCH"
            });
#line 19
            testRunner.Then("SubMenu Appears:", ((string) (null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }

        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify the SideBar appears on the page")]
        public virtual void VerifyTheSideBarAppearsOnThePage()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify the SideBar appears on the page",
                ((string[]) (null)));
#line 27
            this.ScenarioSetup(scenarioInfo);
#line 28
            testRunner.Given("I am on the homepage", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "Given ");
#line 29
            testRunner.Then("SideBar Displays", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "Then ");
#line 30
            testRunner.And("Carousel Main image displays", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }

        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Top Header links in homepage")]
        public virtual void TopHeaderLinksInHomepage()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Top Header links in homepage", ((string[]) (null)));
#line 32
            this.ScenarioSetup(scenarioInfo);
#line 33
            testRunner.When("I am on the Homepage", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "When ");
#line hidden
            var table2 = new TechTalk.SpecFlow.Table(new string[]
            {
                "Value"
            });
            table2.AddRow(new string[]
            {
                "About Us"
            });
            table2.AddRow(new string[]
            {
                "Specials"
            });
            table2.AddRow(new string[]
            {
                "Media centre"
            });
            table2.AddRow(new string[]
            {
                "Contact us"
            });
            table2.AddRow(new string[]
            {
                "More"
            });
            table2.AddRow(new string[]
            {
                "Sign in"
            });
#line 34
            testRunner.Then("Top Headerlinks displays", ((string) (null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }

        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Navigate to Destinations Homepage")]
        public virtual void NavigateToDestinationsHomepage()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Navigate to Destinations Homepage",
                ((string[]) (null)));
#line 43
            this.ScenarioSetup(scenarioInfo);
#line 44
            testRunner.When("I Click on Destinations Link", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                "When ");
#line 45
            testRunner.Then("I navigate to Destinations homepage", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                "Then ");
#line hidden
            this.ScenarioCleanup();
        }

        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Navigate to BeInspired Page")]
        public virtual void NavigateToBeInspiredPage()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Navigate to BeInspired Page", ((string[]) (null)));
#line 47
            this.ScenarioSetup(scenarioInfo);
#line 48
            testRunner.When("I click on BeInspired link", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "When ");
#line 49
            testRunner.Then("I Navigate to BeInspired Page", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
                "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}

#pragma warning restore

#endregion